name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass

    steps:
      - uses: actions/checkout@v4

      - name: Build the Docker image
        id: prep
        run: |
          TAG=my-image-name:$(date +%s)
          docker build -t $TAG .
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Start PostgreSQL container
        run: |
          docker run -d \
            --name postgres \
            -e POSTGRES_DB=$DB_NAME \
            -e POSTGRES_USER=$DB_USER \
            -e POSTGRES_PASSWORD=$DB_PASSWORD \
            -p 5432:5432 \
            --health-cmd="pg_isready -U $DB_USER" \
            --health-interval=10s \
            --health-timeout=5s \
            --health-retries=5 \
            postgres:16

      - name: Wait for PostgreSQL to be healthy
        run: |
          echo "Esperando a que PostgreSQL est√© listo..."
          until docker exec postgres pg_isready -U $DB_USER; do
            sleep 2
          done

      - name: Run backend tests
        run: |
          docker run --rm \
            --link postgres \
            -e DB_NAME=$DB_NAME \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e PYTHONPATH=/app \
            ${{ steps.prep.outputs.tag }} \
            pytest /app/tests/test_app.py --maxfail=5 --disable-warnings
