name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DB_NAME: testdb
      DB_USER: testuser
      DB_PASSWORD: testpass

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

      - name: Run PostgreSQL container for testing
        run: docker run -d --name postgres -e POSTGRES_DB=$DB_NAME -e POSTGRES_USER=$DB_USER -e POSTGRES_PASSWORD=$DB_PASSWORD -p 5432:5432 postgres:14

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Esperando a PostgreSQL..."
            sleep 2
          done

      - name: Run backend tests inside the Docker image
        run: docker run --rm --link postgres --env DB_NAME=$DB_NAME --env DB_USER=$DB_USER --env DB_PASSWORD=$DB_PASSWORD my-image-name:$(date +%s) pytest --maxfail=5 --disable-warnings

      - name: Security audit with pip-audit
        run: docker run --rm my-image-name:$(date +%s) pip-audit

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: my-image-name:$(date +%s)
