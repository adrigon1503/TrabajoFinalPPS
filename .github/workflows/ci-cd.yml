name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432  # Exposición del puerto para que sea accesible si lo necesitas externamente
        options: --health-cmd "pg_isready -U ${{ secrets.DB_USER }}" --health-interval 10s --health-timeout 5s --health-retries 5

      nginx:
        image: nginx:latest
        ports:
          - 80:80  # Nginx se expone en el puerto 80
        volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf  
        depends_on:
          - backend

      backend:
        image: your-fastapi-image:latest
        build:
          context: ./backend  # El contexto para construir tu aplicación FastAPI
        ports:
          - 8000:8000  # FastAPI expuesto en el puerto 8000 dentro del contenedor
        environment:
          - DB_USER=${{ secrets.DB_USER }}
          - DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          - DB_HOST=${{ secrets.DB_HOST }}
          - DB_NAME=${{ secrets.DB_NAME }}
        depends_on:
          - db
        command: ["uvicorn", "backend.app.main:app", "--host", "0.0.0.0", "--port", "8000"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run tests
        run: |
          pytest --maxfail=5 --disable-warnings

      - name: Security audit with pip-audit
        run: pip-audit

      - name: Build Docker image
        run: docker build -t waterpolo-api:latest ./backend

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: waterpolo-api:latest

      - name: Push Docker image to GitHub Container Registry (optional)
        if: github.event_name == 'push'
        run: |
          echo "Skipping push for now"
          # docker tag waterpolo-api:latest ghcr.io/your-username/waterpolo-api:latest
          # echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          # docker push ghcr.io/your-username/waterpolo-api:latest
