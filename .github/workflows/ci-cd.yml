name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: waterpolo
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: mypass
      DB_HOST: db

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file for CI
        run: |
          echo "POSTGRES_DB=${POSTGRES_DB}" > .env
          echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
          echo "DB_HOST=${DB_HOST}" >> .env

      - name: Start containers (CI version)
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml up -d --build


      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            docker compose exec -T db pg_isready && echo "Postgres is ready." && break
            echo "Waiting for postgres..."
            sleep 3
          done

      - name: Install Bandit
        run: pip install bandit

      - name: Static analysis (Bandit)
        run: bandit -r backend -ll

      - name: Show backend test output
        run: docker compose logs backend

      - name: Install pip-audit
        run: pip install pip-audit

      - name: Run pip-audit on backend requirements
        run: pip-audit -r backend/requirements.txt

      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: backend:ci
